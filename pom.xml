<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.feezu</groupId>
  <artifactId>backoffice</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
  	<module>maint-web</module>
  	<module>maint-service</module>
  	<module>maint-app</module>
  	<module>maint-common</module>
  </modules>
  <properties>
		<!-- Build properties -->
		<java.version>1.8</java.version>
		<maven.version>3.0.0</maven.version>
		<node.version>v6.11.5</node.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<spring-boot.version>1.5.10.RELEASE</spring-boot.version>
		<!-- Plugin versions -->
		<maven-clean-plugin.version>2.6.1</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
		<maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
		
	
		 <!-- SERVER ON A REMOTE HOST -->
      	<sonar.host.url>https://sonar.feezu.cn</sonar.host.url>
      	<!-- 域账号 -->
		<sonar.login></sonar.login>
		<!--  域账号密码 -->
      	<sonar.password></sonar.password>
		<sonar-maven-plugin.version>3.2</sonar-maven-plugin.version>
 

        <!-- Sonar properties -->
        <sonar.exclusions>src/main/webapp/content/**/*.*, src/main/webapp/i18n/*.js, target/www/**/*.*, src/main/webapp/app/app.main-aot.ts</sonar.exclusions>
        <sonar.issue.ignore.multicriteria>S3437,UndocumentedApi,BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria>
        <!-- Rule https://sonarqube.com/coding_rules#rule_key=Web%3ABoldAndItalicTagsCheck is ignored. Even if we agree that using the "i" tag is an awful practice, this is what is recommended by http://fontawesome.io/examples/ -->
        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>src/main/webapp/app/**/*.*</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>
        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>Web:BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>
        <!-- Rule https://sonarqube.com/coding_rules#rule_key=squid%3AS3437 is ignored, as a JPA-managed field cannot be transient -->
        <sonar.issue.ignore.multicriteria.S3437.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S3437.resourceKey>
        <sonar.issue.ignore.multicriteria.S3437.ruleKey>squid:S3437</sonar.issue.ignore.multicriteria.S3437.ruleKey>
        <!-- Rule http://sonarqube.com/coding_rules#rule_key=squid%3AUndocumentedApi is ignored, as we want to follow "clean code" guidelines and classes, methods and arguments names should be self-explanatory -->
        <sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>
        <sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>squid:UndocumentedApi</sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>
        <sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
        <sonar.javascript.jstestdriver.reportsPath>${project.testresult.directory}/karma</sonar.javascript.jstestdriver.reportsPath>
        <sonar.typescript.lcov.reportPaths>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.typescript.lcov.reportPaths>
        <sonar.sources>${project.basedir}/src/main/</sonar.sources>
        <sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>
        <sonar.tests>${project.basedir}/src/test/</sonar.tests>

	</properties>
	
	<dependencies>
	<!--spring cloud sleuth end -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.33</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>cn.feezu</groupId>
			<artifactId>common-scheduler</artifactId>
			<version>3.0.3-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
  <dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<defaultGoal>spring-boot:run</defaultGoal>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<rules>
							<requireMavenVersion>
								<message>You are running an older version of Maven. JHipster
									requires at least Maven ${maven.version}</message>
								<version>[${maven.version},)</version>
							</requireMavenVersion>
							<requireJavaVersion>
								<message>You are running an older version of Java. JHipster
									requires at least JDK ${java.version}</message>
								<version>[${java.version}.0,)</version>
							</requireJavaVersion>
						</rules>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<executions>
						<execution>
							<id>default-resources</id>
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>target/classes</outputDirectory>
								<useDefaultDelimiters>false</useDefaultDelimiters>
								<delimiters>
									<delimiter>#</delimiter>
								</delimiters>
								<resources>
									<resource>
										<directory>src/main/resources/</directory>
										<filtering>true</filtering>
										<includes>
											<include>**/*.xml</include>
											<include>**/*.yml</include>
										</includes>
									</resource>
									<resource>
										<directory>src/main/resources/</directory>
										<filtering>false</filtering>
										<excludes>
											<exclude>**/*.xml</exclude>
											<exclude>**/*.yml</exclude>
										</excludes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- Force alphabetical order to have a reproducible build -->
						<runOrder>alphabetical</runOrder>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<executable>true</executable>
						<fork>true</fork>
						<mainClass>${start-class}</mainClass>
						<!-- Enable the line below to have remote debugging of your application 
							on port 5005 <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments> -->
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				 <version>2.2.4</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<prefix>git</prefix>
					<!-- 日期格式 -->
					<dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
					<dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
					<!-- 构建过程中,是否打印详细信息;默认值:false; -->
					<verbose>true</verbose>
					<!-- 是否生成"git.properties"文件;默认值:false; -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<format>properties</format>
					<skipPoms>true</skipPoms>
					<injectAllReactorProjects>false</injectAllReactorProjects>
					<failOnNoGitDirectory>true</failOnNoGitDirectory>
					<failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
					<!-- @since v2.0.4 -->
					<!-- Controls the length of the abbreviated git commit it (git.commit.id.abbrev) Defaults to `7`. `0` carries the special 
						meaning. Maximum value is `40`, because of max SHA-1 length. -->
					<abbrevLength>7</abbrevLength>
					<gitDescribe>
						<!-- don't generate the describe property -->
						<skip>false</skip>
						<!-- if no tag was found "near" this commit, just print the commit's id instead, helpful when you always expect this 
							field to be not-empty -->
						<always>false</always>
						<!-- how many chars should be displayed as the commit object id? 7 is git's default, 0 has a special meaning (see end 
							of this README.md), and 40 is the maximum value here -->
						<abbrev>7</abbrev>
						<!-- when the build is triggered while the repo is in "dirty state", append this suffix -->
						<!-- 构建触发时,代码有修改时(即"dirty state"),添加指定后缀;默认值:""; -->
						<dirty>-dirty</dirty>
						<!-- Only consider tags matching the given pattern. This can be used to avoid leaking private tags from the repository. -->
						<match>*</match>
						<!-- when you run git-describe it only looks only for *annotated tags* by default if you wish to consider *lightweight 
							tags* in your describe as well you would need to switch this to *true* The difference between *annotated tags* and *lightweight 
							tags* is outlined in more depth here: https://github.com/ktoso/maven-git-commit-id-plugin/#git-describe-and-a-small-gotcha-with-tags -->
						<tags>false</tags>
						<!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag. The distance 
							will always be 0 if you're "on" the tag. -->
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>
			</plugin>
			    <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-tests</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
                            </configuration>
                        </execution>
                        <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>
                                <outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>snapshots</id>
			<name>nexus repository</name>
			<url>http://jira.feezu.cn:8085/nexus/content/repositories/snapshots</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>thridpaty</id>
			<name>nexus repository</name>
			<url>http://jira.feezu.cn:8085/nexus/content/repositories/thridparty</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Internal Releases</name>
			<url>http://jira.feezu.cn:8085/nexus/content/repositories/Release</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshots</name>
			<url>http://jira.feezu.cn:8085/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>
